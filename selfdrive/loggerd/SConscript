import subprocess
Import('env', 'arch', 'cereal', 'messaging', 'common', 'visionipc', 'gpucommon')


libs = [common, cereal, messaging, visionipc,
        'zmq', 'capnp', 'kj', 'z',
        'avformat', 'avcodec', 'swscale', 'avutil',
        'yuv', 'bz2', 'OpenCL', 'ion', File('/system/lib64/liblzma.so'), 'xml2']

real_arch = arch = subprocess.check_output(["uname", "-m"], encoding='utf8').rstrip()
android_version = 0
if arch == "aarch64":
  android_version = subprocess.check_output(["getprop", "ro.build.version.release"], encoding='utf8').rstrip()
if android_version == '10':
  libs += [File('#third_party/android_libs/libgsl.so'), File('/vendor/lib64/libplatformconfig.so'), File('/vendor/lib64/vendor.qti.hardware.capabilityconfigstore@1.0.so')]

src = ['logger.cc', 'loggerd.cc']
if arch in ["aarch64", "larch64"]:
  src += ['omx_encoder.cc']
  libs += ['OmxCore', 'gsl', 'CB'] + gpucommon
  if arch == "aarch64":
    libs += ['OmxVenc', 'cutils']
  else:
    libs += ['pthread']
else:
  src += ['raw_logger.cc']
  libs += ['pthread']

if arch == "Darwin":
  # fix OpenCL
  del libs[libs.index('OpenCL')]
  env['FRAMEWORKS'] = ['OpenCL']

logger_lib = env.Library('logger', src)
libs.insert(0, logger_lib)

env.Program('loggerd', ['main.cc'], LIBS=libs)
env.Program('bootlog.cc', LIBS=libs)

if GetOption('test'):
  env.Program('tests/test_logger', ['tests/test_runner.cc', 'tests/test_loggerd.cc', 'tests/test_logger.cc', env.Object('logger_util', '#/selfdrive/ui/replay/util.cc')], LIBS=libs + ['curl', 'crypto'])
